spr_lft_top_norm_1:
       equ  >00
spr_rgt_top_norm_1:
       equ  >04
spr_lft_top_norm_2:
       equ  >08
spr_rgt_top_norm_2:
       equ  >0c
spr_lft_top_norm_3:
       equ  >10
spr_rgt_top_norm_3:
       equ  >14
spr_lft_top_norm_4:
       equ  >18
spr_rgt_top_norm_4:
       equ  >1c
spr_lft_top_norm_5:
       equ  >20
spr_rgt_top_norm_5:
       equ  >24
spr_lft_top_wide_1:
       equ  >28
spr_rgt_top_wide_1:
       equ  >2c
spr_lft_top_wide_2:
       equ  >30
spr_rgt_top_wide_2:
       equ  >34
spr_lft_top_wide_3:
       equ  >38
spr_rgt_top_wide_3:
       equ  >3c
spr_lft_top_wide_4:
       equ  >40
spr_rgt_top_wide_4:
       equ  >44
spr_lft_top_wide_5:
       equ  >48
spr_rgt_top_wide_5:
       equ  >4c
spr_lft_bot_norm_1:
       equ  >50
spr_rgt_bot_norm_1:
       equ  >54
spr_lft_bot_norm_2:
       equ  >58
spr_rgt_bot_norm_2:
       equ  >5c
spr_lft_bot_norm_3:
       equ  >60
spr_rgt_bot_norm_3:
       equ  >64
spr_lft_bot_norm_4:
       equ  >68
spr_rgt_bot_norm_4:
       equ  >6c
spr_lft_bot_wide_1:
       equ  >70
spr_rgt_bot_wide_1:
       equ  >74
spr_lft_bot_wide_2:
       equ  >78
spr_rgt_bot_wide_2:
       equ  >7c
spr_lft_bot_wide_5:
       equ  >80
spr_rgt_bot_wide_5:
       equ  >84
spr_lft_bot_wide_3:
       equ  >88
spr_rgt_bot_wide_3:
       equ  >8c
spr_plant_1:
       equ  >90
spr_plant_2:
       equ  >94
spr_plant_3:
       equ  >98
spr_resident:
       equ  >9c
spr_lft_top_2nd_norm_1:
       equ  >a0
spr_rgt_top_2nd_norm_1:
       equ  >a4
spr_lft_top_2nd_norm_2:
       equ  >a8
spr_rgt_top_2nd_norm_2:
       equ  >ac
spr_lft_top_2nd_norm_3:
       equ  >b0
spr_rgt_top_2nd_norm_3:
       equ  >b4
spr_lft_top_2nd_norm_4:
       equ  >b8
spr_rgt_top_2nd_norm_4:
       equ  >bc
spr_lft_top_2nd_norm_5:
       equ  >c0
spr_rgt_top_2nd_norm_5:
       equ  >c4
spr_lft_top_2nd_wide_1:
       equ  >c8
spr_rgt_top_2nd_wide_1:
       equ  >cc
spr_lft_top_2nd_wide_2:
       equ  >d0
spr_rgt_top_2nd_wide_2:
       equ  >d4
spr_lft_top_2nd_wide_3:
       equ  >d8
spr_rgt_top_2nd_wide_3:
       equ  >dc
spr_lft_top_2nd_wide_4:
       equ  >e0
spr_rgt_top_2nd_wide_4:
       equ  >e4
spr_unused_1:
       equ  >e8
spr_unused_2:
       equ  >ec
spr_lft_bot_2nd_wide_5:
       equ  >f0
spr_rgt_bot_2nd_wide_5:
       equ  >f4
spr_lft_bot_2nd_norm_5:
       equ  >f8
spr_rgt_bot_2nd_norm_5:
       equ  >fc

spr_anim_size:
       equ  8

left_anim:
       data left_norm_0,left_2nd_norm_0,left_wide_0,left_2nd_wide_0
left_anim_1:
       data left_norm_1,left_2nd_norm_1,left_wide_1,left_2nd_wide_1
left_anim_2:
       data left_norm_2,left_2nd_norm_2,left_wide_2,left_2nd_wide_2
left_anim_3:
       data left_norm_3,left_2nd_norm_3,left_wide_3,left_2nd_wide_3
left_anim_last:
       equ  $
left_anim_4:
       data left_norm_4,left_2nd_norm_4,left_wide_4,left_2nd_wide_4
right_anim:
       data right_norm_0,right_2nd_norm_0,right_wide_0,right_2nd_wide_0
right_anim_1:
       data right_norm_1,right_2nd_norm_1,right_wide_1,right_2nd_wide_1
right_anim_2:
       data right_norm_2,right_2nd_norm_2,right_wide_2,right_2nd_wide_2
right_anim_3:
       data right_norm_3,right_2nd_norm_3,right_wide_3,right_2nd_wide_3
right_anim_last:
       equ  $
right_anim_4:
       data right_norm_4,right_2nd_norm_4,right_wide_4,right_2nd_wide_4

left_norm_0:
       byte spr_lft_top_norm_1, spr_lft_bot_norm_1
left_norm_1:
       byte spr_lft_top_norm_2, spr_lft_bot_norm_2
left_norm_2:
       byte spr_lft_top_norm_3, spr_lft_bot_norm_3
left_norm_3:
       byte spr_lft_top_norm_4, spr_lft_bot_norm_2
left_norm_4:
       byte spr_lft_top_norm_5, spr_lft_bot_norm_4

left_wide_0:
       byte spr_lft_top_wide_1, spr_lft_bot_wide_1
left_wide_1:
       byte spr_lft_top_wide_2, spr_lft_bot_wide_2
left_wide_2:
       byte spr_lft_top_wide_3, spr_lft_bot_wide_3
left_wide_3:
       byte spr_lft_top_wide_4, spr_lft_bot_wide_2
left_wide_4:
       byte spr_lft_top_wide_5, spr_lft_bot_wide_5

right_norm_0:
       byte spr_rgt_top_norm_1, spr_rgt_bot_norm_1
right_norm_1:
       byte spr_rgt_top_norm_2, spr_rgt_bot_norm_2
right_norm_2:
       byte spr_rgt_top_norm_3, spr_rgt_bot_norm_3
right_norm_3:
       byte spr_rgt_top_norm_4, spr_rgt_bot_norm_2
right_norm_4:
       byte spr_rgt_top_norm_5, spr_rgt_bot_norm_4

right_wide_0:
       byte spr_rgt_top_wide_1, spr_rgt_bot_wide_1
right_wide_1:
       byte spr_rgt_top_wide_2, spr_rgt_bot_wide_2
right_wide_2:
       byte spr_rgt_top_wide_3, spr_rgt_bot_wide_3
right_wide_3:
       byte spr_rgt_top_wide_4, spr_rgt_bot_wide_2
right_wide_4:
       byte spr_rgt_top_wide_5, spr_rgt_bot_wide_5

left_2nd_norm_0:
       byte spr_lft_top_2nd_norm_1, 0
left_2nd_norm_1:
       byte spr_lft_top_2nd_norm_2, 0
left_2nd_norm_2:
       byte spr_lft_top_2nd_norm_3, 0
left_2nd_norm_3:
       byte spr_lft_top_2nd_norm_4, 0
left_2nd_norm_4:
       byte spr_lft_top_2nd_norm_5, spr_lft_bot_2nd_norm_5

left_2nd_wide_0:
       byte spr_lft_top_2nd_wide_1, 0
left_2nd_wide_1:
       byte spr_lft_top_2nd_wide_2, 0
left_2nd_wide_2:
       byte spr_lft_top_2nd_wide_3, 0
left_2nd_wide_3:
       byte spr_lft_top_2nd_wide_4, 0
left_2nd_wide_4:
       byte spr_lft_top_2nd_norm_5, spr_lft_bot_2nd_wide_5

right_2nd_norm_0:
       byte spr_rgt_top_2nd_norm_1, 0
right_2nd_norm_1:
       byte spr_rgt_top_2nd_norm_2, 0
right_2nd_norm_2:
       byte spr_rgt_top_2nd_norm_3, 0
right_2nd_norm_3:
       byte spr_rgt_top_2nd_norm_4, 0
right_2nd_norm_4:
       byte spr_rgt_top_2nd_norm_5, spr_rgt_bot_2nd_norm_5

right_2nd_wide_0:
       byte spr_rgt_top_2nd_wide_1, 0
right_2nd_wide_1:
       byte spr_rgt_top_2nd_wide_2, 0
right_2nd_wide_2:
       byte spr_rgt_top_2nd_wide_3, 0
right_2nd_wide_3:
       byte spr_rgt_top_2nd_wide_4, 0
right_2nd_wide_4:
       byte spr_rgt_top_2nd_norm_5, spr_rgt_bot_2nd_wide_5

big_sprite_n_sprites:
       equ  0
* Followed by n times little sprites
big_sprite_dy:
       equ  0                          ; Y offset from last little sprite
big_sprite_dx:
       equ  1                          ; Y offset from last little sprite
big_sprite_pattern:
       equ  2
big_sprite_color:
       equ  3

chopper_left:
       data chopper_left_0
       data chopper_left_1
chopper_left_0:
       data 8
       byte >00, >00, >a0, >01         ; Top rotor
       byte >00, >10, >a4, >01
       byte >10, ->10, >b0, >04        ; Body
       byte >00, >10, >b4, >04
       byte >00, >10, >b8, >04
       byte ->08, >10, >bc, >01        ; Tail rotor
       byte >18, ->30, >c0, >0c        ; Landing gear
       byte >00, >10, >c4, >0c
chopper_left_1:
       data 8
       byte >00, >00, >e0, >01         ; Top rotor
       byte >00, >10, >e4, >01
       byte >10, ->10, >b0, >04        ; Body
       byte >00, >10, >b4, >04
       byte >00, >10, >b8, >04
       byte ->08, >10, >a8, >01        ; Tail rotor
       byte >18, ->30, >c0, >0c        ; Landing gear
       byte >00, >10, >c4, >0c

chopper_right:
       data chopper_right_0
       data chopper_right_1
chopper_right_0:
       data 8
       byte >00, >20, >a0, >01         ; Top rotor
       byte >00, >10, >a4, >01
       byte >10, ->20, >d4, >04        ; Body
       byte >00, >10, >d8, >04
       byte >00, >10, >dc, >04
       byte ->08, ->30, >d0, >01       ; Tail rotor
       byte >18, >20, >e8, >0c         ; Landing gear
       byte >00, >10, >ec, >0c
chopper_right_1:
       data 8
       byte >00, >20, >e0, >01         ; Top rotor
       byte >00, >10, >e4, >01
       byte >10, ->20, >d4, >04        ; Body
       byte >00, >10, >d8, >04
       byte >00, >10, >dc, >04
       byte ->08, ->30, >ac, >01       ; Tail rotor
       byte >18, >20, >e8, >0c         ; Landing gear
       byte >00, >10, >ec, >0c

kong:
       data 1
       byte >08,>08,>a0,>0f         ; Eyes
kong_arms:
       data kong_arms_left
       data kong_arms_right
kong_arms_left:
       data kong_arms_0
       data kong_arms_1
       data kong_arms_2
       data kong_arms_5
kong_arms_right:
       data kong_arms_0
       data kong_arms_1
       data kong_arms_3
       data kong_arms_6
kong_arms_0:
       data 2
       byte >18,->08,>c8,>08
       byte >00,>20,>cc,>08
kong_arms_1:
       data 2
       byte >18,->0b,>c0,>08
       byte >00,>26,>c4,>08
kong_arms_2:
       data 2
       byte >18,->08,>c8,>08
       byte >00,>23,>c4,>08
kong_arms_3:
       data 2
       byte >18,->0b,>c0,>08
       byte >00,>23,>cc,>08
kong_arms_5:
       data 3
       byte >18,->08,>c8,>08
       byte >00,>20,>d0,>08
       byte >00,>10,>d4,>09
kong_arms_6:
       data 3
       byte >18,->18,>d8,>09
       byte >00,>10,>dc,>08
       byte >00,>20,>cc,>08

bird_left:
       data bird_left_0
       data bird_left_1
       data bird_left_2
       data bird_left_3
       data bird_left_2
       data bird_left_1
bird_left_0:
       data 4
       byte >00,>00,>a0,>0f
       byte >00,>10,>a4,>0f
       byte >10,->10,>b0,>0f
       byte >00,>10,>b4,>0f
bird_left_1:
       data 2
       byte >08,>00,>a8,>0f
       byte >00,>10,>ac,>0f
bird_left_2:
       data 2
       byte >0c,>00,>b8,>0f
       byte >00,>10,>bc,>0f
bird_left_3:
       data 4
       byte >00,>00,>c0,>0f
       byte >00,>10,>c4,>0f
       byte >10,->10,>c8,>0f
       byte >00,>10,>cc,>0f
bird_right:
       data bird_right_0
       data bird_right_1
       data bird_right_2
       data bird_right_3
       data bird_right_2
       data bird_right_1
bird_right_0:
       data 4
       byte >00,>00,>d0,>0f
       byte >00,>10,>d4,>0f
       byte >10,->10,>e0,>0f
       byte >00,>10,>e4,>0f
bird_right_1:
       data 2
       byte >08,>00,>d8,>0f
       byte >00,>10,>dc,>0f
bird_right_2:
       data 2
       byte >0c,>00,>e8,>0f
       byte >00,>10,>ec,>0f
bird_right_3:
       data 4
       byte >00,>00,>f8,>0f
       byte >00,>10,>fc,>0f
       byte >10,->10,>f0,>0f
       byte >00,>10,>f4,>0f

balloon:
       data 10
       byte >00,->10,>a0,>08
       byte >00,>10,>a4,>08
       byte >10,->10,>a8,>08
       byte >00,>10,>ac,>08
       byte ->10,->10,>b0,>0f
       byte >00,>10,>b4,>06
       byte >10,->10,>b8,>0f
       byte >00,>10,>bc,>06
       byte >10,->08,>c0,>06
       byte >00,>00,>c4,>0f

dropping_sign:
       data 8
       byte >00,>00,>a0,>0f
       byte >00,>10,>a4,>0f
       byte >00,>10,>a8,>0f
       byte >00,>10,>ac,>0f
       byte >10,->30,>b0,>0f
       byte >00,>10,>b4,>0f
       byte >00,>10,>b8,>0f
       byte >00,>10,>bc,>0f
